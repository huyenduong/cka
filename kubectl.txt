# deployment rollback 

kubectl rollout undo deployments nginx-deployment

# view rollout history 

kubectl rollout history deployment nginx-deployment

#create a pod name nginx-pod using image nginx:alpine

kubectl run --generator=run-pod/v1 nginx-pod --image=nginx:alpine

# Deploy a redis pod using the redis:alpine image with labels set to tier=db

kubectl run --generator=run-pod/v1 redis --image=redis:alpine -l tier=db

# Create a service redis-service to expose the redis application within the cluster on port 6379

kubectl expose pod redis --port=6379 --name redis-service


# Create a deployment named webapp using the image kodekloud/webapp-color with 3 replicas
kubectl create deployment webapp --image=kodekloud/webapp-color

then scale the deployment using:
kubectl scale deployment/webapp --replicas=3

# Expose the webapp as service webapp-service application on port 30082 on the nodes on the cluster
# The web application listens on port 8080

kubectl expose deployment webapp --type=NodePort --port=8080 --name=webapp-service --dry-run -o yaml > webapp-service.yaml

then edit the nodeport it it and create a service. there is final service yaml file:

apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: webapp
  name: webapp-service
spec:
  ports:
  - port: 8080
    protocol: TCP
    targetPort: 8080
    nodePort: 30082
  selector:
    app: webapp
  type: NodePort

#####
